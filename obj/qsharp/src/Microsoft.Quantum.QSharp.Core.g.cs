//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"M\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Performs a measurement of a single qubit in the\\rPauli $Z$ basis.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"The output result is given by\\rthe distribution\\r\\\\begin{align}\\r\\\\Pr(\\\\texttt{Zero} | \\\\ket{\\\\psi}) =\\r\\\\braket{\\\\psi | 0} \\\\braket{0 | \\\\psi}.\\r\\\\end{align}\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Equivalent to:\\r\\r```qsharp\\rMeasure([PauliZ], [qubit]);\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"qubit\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Qubit to be measured.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Output\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"`Zero` if the $+1$ eigenvalue is observed, and `One` if\\rthe $-1$ eigenvalue is observed.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\M.qs\",\"Position\":{\"Item1\":30,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":12}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":14},\"Item2\":{\"Line\":1,\"Column\":19}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"Result\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Performs a measurement of a single qubit in the\",\" Pauli $Z$ basis.\",\"\",\" # Description\",\" The output result is given by\",\" the distribution\",\" \\\\begin{align}\",\"     \\\\Pr(\\\\texttt{Zero} | \\\\ket{\\\\psi}) =\",\"         \\\\braket{\\\\psi | 0} \\\\braket{0 | \\\\psi}.\",\" \\\\end{align}\",\"\",\" # Input\",\" ## qubit\",\" Qubit to be measured.\",\"\",\" # Output\",\" `Zero` if the $+1$ eigenvalue is observed, and `One` if\",\" the $-1$ eigenvalue is observed.\",\"\",\" # Remarks\",\" Equivalent to:\",\" ```qsharp\",\" Measure([PauliZ], [qubit]);\",\" ```\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"M\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\M.qs\",\"Position\":{\"Item1\":30,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":12}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"CNOT\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Applies the controlled-NOT (CNOT) gate to a pair of qubits.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"\\\\begin{align}\\r\\\\operatorname{CNOT} \\\\mathrel{:=}\\r\\\\begin{bmatrix}\\r1 & 0 & 0 & 0 \\\\\\\\\\\\\\\\\\r0 & 1 & 0 & 0 \\\\\\\\\\\\\\\\\\r0 & 0 & 0 & 1 \\\\\\\\\\\\\\\\\\r0 & 0 & 1 & 0\\r\\\\end{bmatrix},\\r\\\\end{align}\\r\\rwhere rows and columns are ordered as in the quantum concepts guide.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Equivalent to:\\r\\r```qsharp\\rControlled X([control], target);\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"control\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Control qubit for the CNOT gate.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"target\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Target qubit for the CNOT gate.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\CNOT.qs\",\"Position\":{\"Item1\":32,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"control\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":24}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"target\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":34},\"Item2\":{\"Line\":1,\"Column\":40}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Applies the controlled-NOT (CNOT) gate to a pair of qubits.\",\"\",\" # Description\",\" \\\\begin{align}\",\"     \\\\operatorname{CNOT} \\\\mathrel{:=}\",\"     \\\\begin{bmatrix}\",\"         1 & 0 & 0 & 0 \\\\\\\\\\\\\\\\\",\"         0 & 1 & 0 & 0 \\\\\\\\\\\\\\\\\",\"         0 & 0 & 0 & 1 \\\\\\\\\\\\\\\\\",\"         0 & 0 & 1 & 0\",\"     \\\\end{bmatrix},\",\" \\\\end{align}\",\"\",\" where rows and columns are ordered as in the quantum concepts guide.\",\"\",\" # Input\",\" ## control\",\" Control qubit for the CNOT gate.\",\" ## target\",\" Target qubit for the CNOT gate.\",\"\",\" # Remarks\",\" Equivalent to:\",\" ```qsharp\",\" Controlled X([control], target);\",\" ```\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"CNOT\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\CNOT.qs\",\"Position\":{\"Item1\":33,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"CNOT\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\CNOT.qs\",\"Position\":{\"Item1\":36,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":8}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"CNOT\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\CNOT.qs\",\"Position\":{\"Item1\":32,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":60},\"Item2\":{\"Line\":1,\"Column\":69}},\"Documentation\":[\"automatically generated QsControlled specialization for Microsoft.Quantum.Intrinsic.CNOT\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"CNOT\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\CNOT.qs\",\"Position\":{\"Item1\":32,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":60},\"Item2\":{\"Line\":1,\"Column\":69}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Microsoft.Quantum.Intrinsic.CNOT\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"SWAP\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Applies the SWAP gate to a pair of qubits.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"\\\\begin{align}\\r\\\\operatorname{SWAP} \\\\mathrel{:=}\\r\\\\begin{bmatrix}\\r1 & 0 & 0 & 0 \\\\\\\\\\\\\\\\\\r0 & 0 & 1 & 0 \\\\\\\\\\\\\\\\\\r0 & 1 & 0 & 0 \\\\\\\\\\\\\\\\\\r0 & 0 & 0 & 1\\r\\\\end{bmatrix},\\r\\\\end{align}\\r\\rwhere rows and columns are ordered as in the quantum concepts guide.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Equivalent to:\\r\\r```qsharp\\rCNOT(qubit1, qubit2);\\rCNOT(qubit2, qubit1);\\rCNOT(qubit1, qubit2);\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"qubit1\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"First qubit to be swapped.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"qubit2\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Second qubit to be swapped.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\SWAP.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qubit1\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":23}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qubit2\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":39}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Applies the SWAP gate to a pair of qubits.\",\"\",\" # Description\",\" \\\\begin{align}\",\"     \\\\operatorname{SWAP} \\\\mathrel{:=}\",\"     \\\\begin{bmatrix}\",\"         1 & 0 & 0 & 0 \\\\\\\\\\\\\\\\\",\"         0 & 0 & 1 & 0 \\\\\\\\\\\\\\\\\",\"         0 & 1 & 0 & 0 \\\\\\\\\\\\\\\\\",\"         0 & 0 & 0 & 1\",\"     \\\\end{bmatrix},\",\" \\\\end{align}\",\"\",\" where rows and columns are ordered as in the quantum concepts guide.\",\"\",\" # Input\",\" ## qubit1\",\" First qubit to be swapped.\",\" ## qubit2\",\" Second qubit to be swapped.\",\"\",\" # Remarks\",\" Equivalent to:\",\" ```qsharp\",\" CNOT(qubit1, qubit2);\",\" CNOT(qubit2, qubit1);\",\" CNOT(qubit1, qubit2);\",\" ```\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"SWAP\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\SWAP.qs\",\"Position\":{\"Item1\":35,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":5}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"SWAP\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\SWAP.qs\",\"Position\":{\"Item1\":42,\"Item2\":8},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":8}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"SWAP\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\SWAP.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":59},\"Item2\":{\"Line\":1,\"Column\":68}},\"Documentation\":[\"automatically generated QsControlled specialization for Microsoft.Quantum.Intrinsic.SWAP\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":true,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"SWAP\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\SWAP.qs\",\"Position\":{\"Item1\":34,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":59},\"Item2\":{\"Line\":1,\"Column\":68}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Microsoft.Quantum.Intrinsic.SWAP\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"R1Frac\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Applies a rotation about the $\\\\ket{1}$ state by an angle specified\\ras a dyadic fraction.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"\\\\begin{align}\\rR_1(n, k) \\\\mathrel{:=}\\r\\\\operatorname{diag}(1, e^{i \\\\pi k / 2^n}).\\r\\\\end{align}\\r\\r> [!WARNING]\\r> This operation uses the **opposite** sign convention from\\r> @\\\"microsoft.quantum.intrinsic.r\\\", and does not include the\\r> factor of $1/ 2$ included by @\\\"microsoft.quantum.intrinsic.r1\\\".\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Equivalent to:\\r\\r```qsharp\\rRFrac(PauliZ, -numerator, denominator + 1, qubit);\\rRFrac(PauliI, numerator, denominator + 1, qubit);\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"numerator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Numerator in the dyadic fraction representation of the angle\\rby which the qubit is to be rotated. This angle is expressed in radians.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"power\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Power of two specifying the denominator of the angle by which\\rthe qubit is to be rotated. This angle is expressed in radians.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"qubit\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Qubit to which the gate should be applied.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\R1Frac.qs\",\"Position\":{\"Item1\":36,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"numerator\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":19},\"Item2\":{\"Line\":1,\"Column\":28}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"power\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":36},\"Item2\":{\"Line\":1,\"Column\":41}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":49},\"Item2\":{\"Line\":1,\"Column\":54}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Applies a rotation about the $\\\\ket{1}$ state by an angle specified\",\" as a dyadic fraction.\",\"\",\" # Description\",\" \\\\begin{align}\",\"     R_1(n, k) \\\\mathrel{:=}\",\"     \\\\operatorname{diag}(1, e^{i \\\\pi k / 2^n}).\",\" \\\\end{align}\",\"\",\" > [!WARNING]\",\" > This operation uses the **opposite** sign convention from\",\" > @\\\"microsoft.quantum.intrinsic.r\\\", and does not include the\",\" > factor of $1/ 2$ included by @\\\"microsoft.quantum.intrinsic.r1\\\".\",\"\",\" # Input\",\" ## numerator\",\" Numerator in the dyadic fraction representation of the angle\",\" by which the qubit is to be rotated. This angle is expressed in radians.\",\" ## power\",\" Power of two specifying the denominator of the angle by which\",\" the qubit is to be rotated. This angle is expressed in radians.\",\" ## qubit\",\" Qubit to which the gate should be applied.\",\"\",\" # Remarks\",\" Equivalent to:\",\" ```qsharp\",\" RFrac(PauliZ, -numerator, denominator + 1, qubit);\",\" RFrac(PauliI, numerator, denominator + 1, qubit);\",\" ```\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"R1Frac\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\R1Frac.qs\",\"Position\":{\"Item1\":36,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"R1Frac\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\R1Frac.qs\",\"Position\":{\"Item1\":36,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":74},\"Item2\":{\"Line\":1,\"Column\":83}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Microsoft.Quantum.Intrinsic.R1Frac\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"R1Frac\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\R1Frac.qs\",\"Position\":{\"Item1\":36,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":74},\"Item2\":{\"Line\":1,\"Column\":83}},\"Documentation\":[\"automatically generated QsControlled specialization for Microsoft.Quantum.Intrinsic.R1Frac\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"R1Frac\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\R1Frac.qs\",\"Position\":{\"Item1\":36,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":74},\"Item2\":{\"Line\":1,\"Column\":83}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Microsoft.Quantum.Intrinsic.R1Frac\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"RFrac\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Summary\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Applies a rotation about the given Pauli axis by an angle specified\\ras a dyadic fraction.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Description\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"\\\\begin{align}\\rR_{\\\\mu}(n, k) \\\\mathrel{:=}\\re^{i \\\\pi n \\\\sigma_{\\\\mu} / 2^k},\\r\\\\end{align}\\rwhere $\\\\mu \\\\in \\\\{I, X, Y, Z\\\\}$.\\r\\r> [!WARNING]\\r> This operation uses the **opposite** sign convention from\\r> @\\\"microsoft.quantum.intrinsic.r\\\".\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Remarks\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Equivalent to:\\r\\r```qsharp\\r// PI() is a Q# function that returns an approximation of π.\\rR(pauli, -PI() * IntAsDouble(numerator) / IntAsDouble(2 ^ (power - 1)), qubit);\\r```\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"pauli\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Pauli operator to be exponentiated to form the rotation.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"numerator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Numerator in the dyadic fraction representation of the angle\\rby which the qubit is to be rotated. This angle is expressed in radians.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"power\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Power of two specifying the denominator of the angle by which\\rthe qubit is to be rotated. This angle is expressed in radians.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Documentation\",\"Name\":\"Input\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"qubit\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Qubit to which the gate should be applied.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\RFrac.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"pauli\"]},\"Type\":{\"Case\":\"Pauli\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":23}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"numerator\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":42}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"power\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":50},\"Item2\":{\"Line\":1,\"Column\":55}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qubit\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":63},\"Item2\":{\"Line\":1,\"Column\":68}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Pauli\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[\" # Summary\",\" Applies a rotation about the given Pauli axis by an angle specified\",\" as a dyadic fraction.\",\"\",\" # Description\",\" \\\\begin{align}\",\"     R_{\\\\mu}(n, k) \\\\mathrel{:=}\",\"     e^{i \\\\pi n \\\\sigma_{\\\\mu} / 2^k},\",\" \\\\end{align}\",\" where $\\\\mu \\\\in \\\\{I, X, Y, Z\\\\}$.\",\"\",\" > [!WARNING]\",\" > This operation uses the **opposite** sign convention from\",\" > @\\\"microsoft.quantum.intrinsic.r\\\".\",\"\",\" # Input\",\" ## pauli\",\" Pauli operator to be exponentiated to form the rotation.\",\" ## numerator\",\" Numerator in the dyadic fraction representation of the angle\",\" by which the qubit is to be rotated. This angle is expressed in radians.\",\" ## power\",\" Power of two specifying the denominator of the angle by which\",\" the qubit is to be rotated. This angle is expressed in radians.\",\" ## qubit\",\" Qubit to which the gate should be applied.\",\"\",\" # Remarks\",\" Equivalent to:\",\" ```qsharp\",\" // PI() is a Q# function that returns an approximation of π.\",\" R(pauli, -PI() * IntAsDouble(numerator) / IntAsDouble(2 ^ (power - 1)), qubit);\",\" ```\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"RFrac\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\RFrac.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"RFrac\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\RFrac.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":88},\"Item2\":{\"Line\":1,\"Column\":97}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Microsoft.Quantum.Intrinsic.RFrac\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"RFrac\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\RFrac.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":88},\"Item2\":{\"Line\":1,\"Column\":97}},\"Documentation\":[\"automatically generated QsControlled specialization for Microsoft.Quantum.Intrinsic.RFrac\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Microsoft.Quantum.Intrinsic\",\"Name\":\"RFrac\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\a\\\\1\\\\s\\\\submodules\\\\qsharp-runtime\\\\src\\\\Simulation\\\\TargetDefinitions\\\\Decompositions\\\\RFrac.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":88},\"Item2\":{\"Line\":1,\"Column\":97}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Microsoft.Quantum.Intrinsic.RFrac\"]}")]
#line hidden
namespace Microsoft.Quantum.Intrinsic
{
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Body, 31, 33)]
    public partial class M : Operation<Qubit, Result>, ICallable
    {
        public M(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "M";
        String ICallable.FullName => "Microsoft.Quantum.Intrinsic.M";
        protected ICallable<(IQArray<Pauli>,IQArray<Qubit>), Result> Measure__
        {
            get;
            set;
        }

        public override Func<Qubit, Result> __Body__ => (__in__) =>
        {
            var qubit = __in__;
#line 32 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            return Measure__.Apply((new QArray<Pauli>(Pauli.PauliZ), new QArray<Qubit>(qubit)));
        }

        ;
        public override void __Init__()
        {
            this.Measure__ = this.__Factory__.Get<ICallable<(IQArray<Pauli>,IQArray<Qubit>), Result>>(typeof(Measure));
        }

        public override IApplyData __DataIn__(Qubit data) => data;
        public override IApplyData __DataOut__(Result data) => new QTuple<Result>(data);
        public static System.Threading.Tasks.Task<Result> Run(IOperationFactory __m__, Qubit qubit)
        {
            return __m__.Run<M, Qubit, Result>(qubit);
        }
    }

    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Body, 34, 35)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Adjoint, 37, 41)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Controlled, 33, 34)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.ControlledAdjoint, 33, 34)]
    public partial class CNOT : Unitary<(Qubit,Qubit)>, ICallable
    {
        public CNOT(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Qubit)>, IApplyData
        {
            public In((Qubit,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                    yield return Data.Item2;
                }
            }
        }

        String ICallable.Name => "CNOT";
        String ICallable.FullName => "Microsoft.Quantum.Intrinsic.CNOT";
        protected IUnitary<Qubit> X__
        {
            get;
            set;
        }

        public override Func<(Qubit,Qubit), QVoid> __Body__ => (__in__) =>
        {
            var (control,target) = __in__;
#line 35 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            X__.Controlled.Apply((new QArray<Qubit>(control), target));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Qubit,Qubit), QVoid> __AdjointBody__ => __Body__;
        public override Func<(IQArray<Qubit>,(Qubit,Qubit)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(control,target)) = __in__;
#line 33 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            X__.Controlled.Controlled.Apply((__controlQubits__, (new QArray<Qubit>(control), target)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Qubit,Qubit)), QVoid> __ControlledAdjointBody__ => __ControlledBody__;
        public override void __Init__()
        {
            this.X__ = this.__Factory__.Get<IUnitary<Qubit>>(typeof(X));
        }

        public override IApplyData __DataIn__((Qubit,Qubit) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit control, Qubit target)
        {
            return __m__.Run<CNOT, (Qubit,Qubit), QVoid>((control, target));
        }
    }

    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Body, 36, 37)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Adjoint, 43, -1)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Controlled, 35, 36)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.ControlledAdjoint, 35, 36)]
    public partial class SWAP : Unitary<(Qubit,Qubit)>, ICallable
    {
        public SWAP(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Qubit)>, IApplyData
        {
            public In((Qubit,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                    yield return Data.Item2;
                }
            }
        }

        String ICallable.Name => "SWAP";
        String ICallable.FullName => "Microsoft.Quantum.Intrinsic.SWAP";
        protected IUnitary<(Qubit,Qubit)> CNOT__
        {
            get;
            set;
        }

        public override Func<(Qubit,Qubit), QVoid> __Body__ => (__in__) =>
        {
            var (qubit1,qubit2) = __in__;
#line 38 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            CNOT__.Apply((qubit1, qubit2));
#line 40 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            CNOT__.Apply((qubit2, qubit1));
#line 36 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            CNOT__.Adjoint.Apply((qubit1, qubit2));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Qubit,Qubit), QVoid> __AdjointBody__ => __Body__;
        public override Func<(IQArray<Qubit>,(Qubit,Qubit)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(qubit1,qubit2)) = __in__;
#line 35 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            CNOT__.Apply((qubit1, qubit2));
#line 35 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            CNOT__.Controlled.Apply((__controlQubits__, (qubit2, qubit1)));
#line 35 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            CNOT__.Adjoint.Apply((qubit1, qubit2));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Qubit,Qubit)), QVoid> __ControlledAdjointBody__ => __ControlledBody__;
        public override void __Init__()
        {
            this.CNOT__ = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(CNOT));
        }

        public override IApplyData __DataIn__((Qubit,Qubit) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit qubit1, Qubit qubit2)
        {
            return __m__.Run<SWAP, (Qubit,Qubit), QVoid>((qubit1, qubit2));
        }
    }

    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Body, 37, 37)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Adjoint, 37, 37)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Controlled, 37, 37)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.ControlledAdjoint, 37, 37)]
    public partial class R1Frac : Unitary<(Int64,Int64,Qubit)>, ICallable
    {
        public R1Frac(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64,Qubit)>, IApplyData
        {
            public In((Int64,Int64,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item3;
                }
            }
        }

        String ICallable.Name => "R1Frac";
        String ICallable.FullName => "Microsoft.Quantum.Intrinsic.R1Frac";
        protected IUnitary<(Pauli,Int64,Int64,Qubit)> RFrac__
        {
            get;
            set;
        }

        public override Func<(Int64,Int64,Qubit), QVoid> __Body__ => (__in__) =>
        {
            var (numerator,power,qubit) = __in__;
#line 38 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            RFrac__.Apply((Pauli.PauliZ, -(numerator), (power + 1L), qubit));
#line 39 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            RFrac__.Apply((Pauli.PauliI, numerator, (power + 1L), qubit));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Int64,Int64,Qubit), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (numerator,power,qubit) = __in__;
#line 37 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            RFrac__.Adjoint.Apply((Pauli.PauliI, numerator, (power + 1L), qubit));
#line 37 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            RFrac__.Adjoint.Apply((Pauli.PauliZ, -(numerator), (power + 1L), qubit));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Int64,Int64,Qubit)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(numerator,power,qubit)) = __in__;
#line 37 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            RFrac__.Controlled.Apply((__controlQubits__, (Pauli.PauliZ, -(numerator), (power + 1L), qubit)));
#line 37 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            RFrac__.Controlled.Apply((__controlQubits__, (Pauli.PauliI, numerator, (power + 1L), qubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Int64,Int64,Qubit)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(numerator,power,qubit)) = __in__;
#line 37 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            RFrac__.Adjoint.Controlled.Apply((__controlQubits__, (Pauli.PauliI, numerator, (power + 1L), qubit)));
#line 37 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            RFrac__.Adjoint.Controlled.Apply((__controlQubits__, (Pauli.PauliZ, -(numerator), (power + 1L), qubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.RFrac__ = this.__Factory__.Get<IUnitary<(Pauli,Int64,Int64,Qubit)>>(typeof(RFrac));
        }

        public override IApplyData __DataIn__((Int64,Int64,Qubit) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Int64 numerator, Int64 power, Qubit qubit)
        {
            return __m__.Run<R1Frac, (Int64,Int64,Qubit), QVoid>((numerator, power, qubit));
        }
    }

    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Body, 41, 42)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Adjoint, 41, 42)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.Controlled, 41, 42)]
    [SourceLocation("/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll", OperationFunctor.ControlledAdjoint, 41, 42)]
    public partial class RFrac : Unitary<(Pauli,Int64,Int64,Qubit)>, ICallable
    {
        public RFrac(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Pauli,Int64,Int64,Qubit)>, IApplyData
        {
            public In((Pauli,Int64,Int64,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item4;
                }
            }
        }

        String ICallable.Name => "RFrac";
        String ICallable.FullName => "Microsoft.Quantum.Intrinsic.RFrac";
        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        protected ICallable<Int64, Double> Microsoft__Quantum__Convert__IntAsDouble
        {
            get;
            set;
        }

        protected IUnitary<(Pauli,Double,Qubit)> R__
        {
            get;
            set;
        }

        public override Func<(Pauli,Int64,Int64,Qubit), QVoid> __Body__ => (__in__) =>
        {
            var (pauli,numerator,power,qubit) = __in__;
#line 44 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            var angle = (((-(2D) * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) * Microsoft__Quantum__Convert__IntAsDouble.Apply(numerator)) / 2D.Pow(Microsoft__Quantum__Convert__IntAsDouble.Apply(power)));
#line 45 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            R__.Apply((pauli, angle, qubit));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(Pauli,Int64,Int64,Qubit), QVoid> __AdjointBody__ => (__in__) =>
        {
            var (pauli,numerator,power,qubit) = __in__;
#line 41 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            var __qsVar0__angle__ = (((-(2D) * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) * Microsoft__Quantum__Convert__IntAsDouble.Apply(numerator)) / 2D.Pow(Microsoft__Quantum__Convert__IntAsDouble.Apply(power)));
#line 41 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            R__.Adjoint.Apply((pauli, __qsVar0__angle__, qubit));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Pauli,Int64,Int64,Qubit)), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,(pauli,numerator,power,qubit)) = __in__;
#line 41 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            var angle = (((-(2D) * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) * Microsoft__Quantum__Convert__IntAsDouble.Apply(numerator)) / 2D.Pow(Microsoft__Quantum__Convert__IntAsDouble.Apply(power)));
#line 41 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            R__.Controlled.Apply((__controlQubits__, (pauli, angle, qubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,(Pauli,Int64,Int64,Qubit)), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,(pauli,numerator,power,qubit)) = __in__;
#line 41 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            var __qsVar0__angle__ = (((-(2D) * Microsoft__Quantum__Math__PI.Apply(QVoid.Instance)) * Microsoft__Quantum__Convert__IntAsDouble.Apply(numerator)) / 2D.Pow(Microsoft__Quantum__Convert__IntAsDouble.Apply(power)));
#line 41 "/home/ubuntu/.nuget/packages/microsoft.quantum.qsharp.core/0.28.263081/lib/net6.0/Microsoft.Quantum.QSharp.Core.dll"
            R__.Adjoint.Controlled.Apply((__controlQubits__, (pauli, __qsVar0__angle__, qubit)));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
            this.Microsoft__Quantum__Convert__IntAsDouble = this.__Factory__.Get<ICallable<Int64, Double>>(typeof(global::Microsoft.Quantum.Convert.IntAsDouble));
            this.R__ = this.__Factory__.Get<IUnitary<(Pauli,Double,Qubit)>>(typeof(R));
        }

        public override IApplyData __DataIn__((Pauli,Int64,Int64,Qubit) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Pauli pauli, Int64 numerator, Int64 power, Qubit qubit)
        {
            return __m__.Run<RFrac, (Pauli,Int64,Int64,Qubit), QVoid>((pauli, numerator, power, qubit));
        }
    }
}